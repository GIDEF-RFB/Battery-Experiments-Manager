"""
Django settings for batteryCycling_project project.

Generated by 'django-admin startproject' using Django 4.0.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""
import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
print(BASE_DIR)

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ['SECRET_KEY']

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

CORS_ORIGIN_ALLOW_ALL = True

CORS_ALLOWED_ORIGINS = ['*']

# CORS_ALLOWED_ORIGINS = [
#     "http://localhost:8080",
#     "http://127.0.0.1:8000",
#     "http://192.168.6.60:3000",
#     "http://192.168.0.80:8000",
#     "http://192.168.0.80:3000",
#     "http://example.es:8000",
#     "http://example.es:3000/"
# ]

ALLOWED_HOSTS = ['*']

#ALLOWED_HOSTS = [
#     "http://192.168.0.80",
#     "http://192.168.0.80:3000",
#     "http://192.168.0.80:8000",
#     "http://example.es",
#     "http://example.es:8000/",
# ]

CORS_ALLOW_METHODS = [
    "DELETE",
    "GET",
    "OPTIONS",
    "PATCH",
    "POST",
    "PUT",
]

CORS_ALLOW_HEADERS = [
    "accept",
    "accept-encoding",
    "authorization",
    "content-type",
    "dnt",
    "origin",
    "user-agent",
    "x-csrftoken",
    "x-requested-with",
    "cache-control",
    "pragma",
    "changeTo",
]

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'bootstrap4',
    'auto_lab',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'batteryCycling_project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['batteryCycling_project/templates/'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'batteryCycling_project.wsgi.application'

# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

env = {}
if os.path.exists('./batteryCycling_project/.cred.env'):
    print('cred file exists --> env vars are going to be read from file')
    with open('./batteryCycling_project/.cred.env') as f:
        for line in f:
            line = line.strip()
            if line.startswith('#') or not(line.startswith('DJANGO')):
                continue
            k, v = line.split('=', 1)
            env[k] = v
else:
    print('cred file NOT exists --> env vars are going to be used')
    env['DJANGO_DB1_database']  =   os.environ.get('DJANGO_DB1_database')
    env['DJANGO_DB1_user']      =   os.environ.get('DJANGO_DB1_user')
    env['DJANGO_DB1_password']  =   os.environ.get('DJANGO_DB1_password')
    env['DJANGO_DB1_host']      =   os.environ.get('DJANGO_DB1_host')
    env['DJANGO_DB1_port']      =   os.environ.get('DJANGO_DB1_port')


DATABASES = {
    'default': {
        'ENGINE'    :   'mysql.connector.django',
        'NAME'      :   env['DJANGO_DB1_database'],
        'USER'      :   env['DJANGO_DB1_user'],
        'PASSWORD'  :   env['DJANGO_DB1_password'],
        'HOST'      :   env['DJANGO_DB1_host'],
        'PORT'      :   env['DJANGO_DB1_port'],
        # 'OPTIONS': {
        #     'read_default_file': 'batteryCycling_project/.cred.env',
        #     'autocommit': True,
        # },
    }
}

# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL = '/static/'

STATICFILES_DIRS = [
    BASE_DIR / 'static',
]

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

DATA_UPLOAD_MAX_MEMORY_SIZE = 25242880       # Limit max number of initial measures loaded on each graph

# Staticfiles finders for locating dash app assets and related files

STATICFILES_FINDERS = [

    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
]

X_FRAME_OPTIONS = 'SAMEORIGIN'
